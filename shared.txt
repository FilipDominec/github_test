class PlasmonicSpheres(meep_utils.AbstractMeepModel): 
    def __init__(self, comment="", simtime=50e-15, resolution=1e-9, cellsize=27e-9, cellnumber=1, padding=20e-9, 
            radius=10e-9, cthick=40e-9, loss=1, epsilon=2.1):
        meep_utils.AbstractMeepModel.__init__(self)        ## Base class initialisation

		POSTGOETHIAN FIX =========================
        ## Constant parameters for the simulation
        self.simulation_name = "PlasmonicSpheres"    
        self.src_freq, self.src_width = 100e12, 4000e12    # [Hz] (note: gaussian source ends at t=10/src_width)
        self.interesting_frequencies = (100e12, 1000e12)    # Which frequencies will be saved to disk
        self.pml_thickness = 10e-9

        self.size_x = cellsize 
        self.size_y = cellsize
        self.size_z = cellnumber*cellsize + 4*padding + 2*self.pml_thickness
        self.monitor_z1, self.monitor_z2 = (-(cellsize*cellnumber/2)-padding, (cellsize*cellnumber/2)+padding)
        self.cellcenters = np.arange((1-cellnumber)*cellsize/2, cellnumber*cellsize/2, cellsize)

        self.register_locals(locals())          ## Remember the parameters
        print 'self.simulation_name', self.simulation_name
		SOME PUBLIC MODIFICATION
		ANOTHER PUBLIC IMPROVEMENT
        print comment

